{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/getType.js","../src/getRanges.js","../src/extractSpansOfClasses.js","../src/HighlighedContents.js","../src/HighlightWithinTextarea.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// returns identifier strings that aren't necessarily \"real\" JavaScript types\nexport default function getType(instance) {\n    let type = typeof instance;\n    if (!instance) {\n        return 'falsey';\n    } else if (Array.isArray(instance)) {\n        if (instance.length === 2 && typeof instance[0] === 'number' && typeof instance[1] === 'number') {\n            return 'range';\n        } else {\n            return 'array';\n        }\n    } else if (type === 'object') {\n        if (instance instanceof RegExp) {\n            return 'regexp';\n        } else if (instance.hasOwnProperty('highlight')) {\n            return 'custom';\n        }\n    } else if (type === 'function' || type === 'string') {\n        return type;\n    }\n\n    return 'other';\n}","import getType from './getType';\n\nexport default function getRanges(input, highlight) {\n    let type = getType(highlight);\n    switch (type) {\n        case 'array':\n            return getArrayRanges(input, highlight);\n        case 'function':\n            return getFunctionRanges(input, highlight);\n        case 'regexp':\n            return getRegExpRanges(input, highlight);\n        case 'string':\n            return getStringRanges(input, highlight);\n        case 'range':\n            return getRangeRanges(input, highlight);\n        case 'custom':\n            return getCustomRanges(input, highlight);\n        default:\n            if (!highlight) {\n                // do nothing for falsey values\n                return [];\n            } else {\n                console.error('unrecognized highlight type');\n            }\n    }\n}\n\nfunction getArrayRanges (input, arr) {\n    let ranges = arr.map(getRanges.bind(this, input));\n    return Array.prototype.concat.apply([], ranges);\n}\n\nfunction getFunctionRanges(input, func) {\n    return getRanges(input, func(input));\n}\n\nfunction getRegExpRanges(input, regex) {\n    let ranges = [];\n    let match;\n    while (match = regex.exec(input), match !== null) {\n        ranges.push([match.index, match.index + match[0].length]);\n        if (!regex.global) {\n            // non-global regexes do not increase lastIndex, causing an infinite loop,\n            // but we can just break manually after the first match\n            break;\n        }\n    }\n    return ranges;\n}\n\nfunction getStringRanges(input, str) {\n    let ranges = [];\n    let inputLower = input.toLowerCase();\n    let strLower = str.toLowerCase();\n    let index = 0;\n    while (index = inputLower.indexOf(strLower, index), index !== -1) {\n        ranges.push([index, index + strLower.length]);\n        index += strLower.length;\n    }\n    return ranges;\n}\n\nfunction getRangeRanges(input, range) {\n    return [range];\n}\n\nfunction getCustomRanges(input, custom) {\n    let ranges = getRanges(input, custom.highlight);\n    if (custom.className) {\n        ranges.forEach(function(range) {\n            // persist class name as a property of the array\n            if (range.className) {\n                range.className = custom.className + ' ' + range.className;\n            } else {\n                range.className = custom.className;\n            }\n        });\n    }\n    return ranges;\n}\n","import React from 'react';\n\nclass Span {\n    constructor(text, beginIndex) {\n        this.beginIndex = beginIndex;\n        this.endIndex = beginIndex + text.length; // Like String.slice, it is inclusive.\n        this.text = text;\n        this.isMark = false;\n        this.markClasses = new Set();\n    }\n\n    setMark(className) {\n        this.isMark = true;\n        if (className) {\n            for (let c of className.split(' ')) {\n                this.markClasses.add(c);\n            }\n        }\n    }\n\n    carve(beginIndex2) {\n        // Carves self to take a bit off the right and returns that carving.\n        let rightText = this.text.slice(beginIndex2 - this.beginIndex);\n        this.text = this.text.slice(0, beginIndex2 - this.beginIndex);\n        this.endIndex = beginIndex2;\n\n        let right = new Span(rightText, beginIndex2);\n        right.isMark = this.isMark;\n        right.markClasses = new Set([...this.markClasses]);\n\n        return right;\n    }\n\n    get className() {\n        if (this.markClasses && this.markClasses.size > 0) {\n            return [...this.markClasses].sort().join(\" \");\n        } else {\n            return \"\";\n        }\n    }\n\n    render() {\n        if (this.isMark) {\n            let className = this.className;\n            if (className) {\n                return(\n                    <mark key={this.beginIndex} className={className}>\n                        {this.text}\n                    </mark>\n                );\n            } else {\n                return(<mark key={this.beginIndex}>{this.text}</mark>);\n            }\n        } else {\n            return(<span key={this.beginIndex}>{this.text}</span>);\n        }\n    }\n}\n\nexport default function extractSpansOfClasses(value, ranges) {\n    /* Returns value broken into a series of Span classes.  These\n     * can be converted to JSX via the render command.\n     */\n    \n    let spans = [new Span(value, 0)];\n\n    for (let range of ranges) {\n        let beginIndex = range[0];\n        let endIndex = range[1];\n        let className = range.className;\n\n        for (let i = 0; i < spans.length; i++) {\n            let span = spans[i];\n\n            // since spans are sorted, So this is always true: beginIndex >= span.beginIndex.\n            if (beginIndex < span.endIndex) {\n                if (beginIndex == span.beginIndex) {\n                    if (endIndex < span.endIndex) {\n                        // [range]\n                        // [s  p  a  n]\n                        let span2 = span.carve(endIndex);\n                        span.setMark(className);\n                        spans.splice(i + 1, 0, span2);\n                        beginIndex = endIndex;\n                        i += 1;\n                    } else {\n                        // [range]   or   [r a n g e]\n                        // [span-]        [span]\n                        span.setMark(className);\n                        beginIndex = span.endIndex;\n                    }\n                } else {\n                    if (endIndex < span.endIndex) {\n                        //   [range]\n                        // [s  p  a  n]\n                        let span2 = span.carve(beginIndex);\n                        let span3 = span2.carve(endIndex);\n                        span2.setMark(className);\n                        spans.splice(i + 1, 0, span2, span3);\n                        beginIndex = endIndex;\n                        i += 2;\n                    } else {\n                        //   [range]  or     [range]\n                        // [s p a n]       [span]\n                        let span2 = span.carve(beginIndex);\n                        span2.setMark(className);\n                        spans.splice(i + 1, 0, span2);\n                        beginIndex = span2.endIndex;\n                        i += 1;\n                    }\n                }\n            }\n            if (beginIndex == endIndex) {\n                break;\n            }\n        }\n    }\n    return spans;\n}","import React from 'react';\nimport styles from './styles/styles.css';\nimport getRanges from './getRanges';\nimport extractSpansOfClasses from './extractSpansOfClasses';\n\nconst HighlighedContents = ({value, highlight}) => {\n    \n    let ranges = getRanges(value, highlight);\n    let parts = extractSpansOfClasses(value, ranges);\n\n    return (\n        <div>\n            <div className={`${styles.highlights} ${styles.content}`} >\n                {parts.map(part => part.render())}\n             </div>\n        </div>\n    );       \n}\n\nexport default HighlighedContents","import React, { useState, useRef } from 'react';\nimport styles from './styles/styles.css';\nimport HighlighedContents from './HighlighedContents';\n\nexport const HighlightWithinTextarea = ({value, onChange, highlight={}, className = \"\",  style={}, containerStyle={}, containerClassName=\"\", onScroll, ...textareaProps}) => {\n  let containerProps = {}\n  const textareaClassName = `${styles.input} ${styles.content}`;\n  const textareaRef = useRef(null);\n  const backdropRef = useRef(null);\n\n  className = `${styles.input} ${styles.content} ${className}`;\n  containerClassName = `${styles.container} ${containerClassName}`;\n\n  // Resizing is currently not supported\n  style.resize = \"none\";\n\n  // To properly work, value and onChange must be supplied.  Give a hint for new users.\n  const [fakeValue, setFakeValue] = useState(\"Please supply a value and an onChange parameter.\");\n  if (value == undefined) {\n    value = fakeValue;\n    onChange = event => {setFakeValue(event.target.value)};\n  }\n  \n  const handleScroll = event => {\n    backdropRef.current.scrollTop = textareaRef.current.scrollTop;\n    backdropRef.current.scrollLeft = textareaRef.current.scrollLeft;\n    console.log('handleScroll')\n  };\n  const blockContainerScroll = event => { console.log('blockContainerScroll')};\n\n  return (\n    <div className={containerClassName} style={containerStyle} onScroll={blockContainerScroll} >\n      <div className={styles.backdrop} ref={backdropRef}>\n        <HighlighedContents value={value} highlight={highlight}>\n        </HighlighedContents>\n      </div>\n      <textarea value={value} onChange={onChange} style={style} className={className} {...textareaProps} onScroll={handleScroll} ref={textareaRef} >\n      </textarea>\n    </div>\n  );\n}\n"],"names":["getType","instance","type","Array","isArray","length","RegExp","hasOwnProperty","getRanges","input","highlight","getArrayRanges","getFunctionRanges","getRegExpRanges","getStringRanges","getRangeRanges","getCustomRanges","console","error","arr","ranges","map","bind","prototype","concat","apply","func","regex","match","exec","push","index","global","str","inputLower","toLowerCase","strLower","indexOf","range","custom","className","forEach","Span","text","beginIndex","endIndex","isMark","markClasses","Set","split","c","add","beginIndex2","rightText","slice","right","React","size","sort","join","extractSpansOfClasses","value","spans","i","span","span2","carve","setMark","splice","span3","HighlighedContents","parts","styles","highlights","content","part","render","HighlightWithinTextarea","onChange","style","containerStyle","containerClassName","onScroll","textareaProps","textareaRef","useRef","backdropRef","container","resize","useState","fakeValue","setFakeValue","undefined","event","target","handleScroll","current","scrollTop","scrollLeft","log","blockContainerScroll","backdrop"],"mappings":"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"}